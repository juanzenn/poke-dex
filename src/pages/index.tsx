import { appRouter } from "@/server/router";
import { createContext } from "@/server/router/context";
import { trpc } from "@/utils/trpc";
import { Button } from "@mantine/core";
import { createSSGHelpers } from "@trpc/react/ssg";
import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useState } from "react";
import superjson from "superjson";
import PokemonCard from "./index/PokemonCard";

const Home: NextPage = () => {
  const router = useRouter();
  const getPage = (): number =>
    router.query?.page ? Number(router.query.page) : 1;
  const [currentPage, setCurrentPage] = useState<number>(getPage);
  const { data, isLoading } = trpc.useQuery([
    "pokemon.get-group",
    { page: currentPage },
  ]);

  const onPreviousPage = () => {
    const value = currentPage - 1;
    router.replace(
      { href: "/", query: { page: value } },
      { href: "/", query: undefined },
      {
        shallow: true,
      }
    );
    setCurrentPage(value);
  };

  const onNextPage = () => {
    const value = currentPage + 1;
    router.replace(
      { href: "/", query: { page: value } },
      { href: "/", query: undefined },
      {
        shallow: true,
      }
    );
    setCurrentPage(value);
  };

  return (
    <>
      <Head>
        <title>Poke-Dex</title>
        <meta
          name="description"
          content="Sandbox app for trying new stuff. Generated by create-t3-app"
        />
      </Head>

      <section className="flex flex-col h-screen w-screen justify-between p-12">
        {isLoading ? (
          <div className="flex justify-center text-white">Loading...</div>
        ) : (
          <section className="grid grid-cols-6 gap-4">
            {data?.map((pokemon) => (
              <PokemonCard
                key={pokemon.id}
                id={pokemon.id}
                name={pokemon.name}
                image={pokemon.sprites.front_default ?? ""}
              />
            ))}
          </section>
        )}

        <div className="flex justify-center items-baseline gap-4">
          <Button
            onClick={onPreviousPage}
            disabled={currentPage === 1}
            variant="filled"
          >
            Previous page
          </Button>

          <p className="text-white">{currentPage}</p>

          <Button
            onClick={onNextPage}
            disabled={currentPage === 38}
            variant="filled"
          >
            Next page
          </Button>
        </div>
      </section>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async (context) => {
  const ssg = createSSGHelpers({
    router: appRouter,
    ctx: await createContext(),
    transformer: superjson,
  });

  const initialPage = context.query?.page ? Number(context.query?.page) : 1;
  await ssg.prefetchQuery("pokemon.get-group", { page: initialPage });

  return {
    props: {
      trpcState: ssg.dehydrate(),
    },
  };
};

export default Home;
