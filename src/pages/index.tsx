import { Button } from "@mantine/core";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import { JSXElementConstructor, useState } from "react";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const [currentPage, setCurrentPage] = useState<number>(1);
  const { data, isLoading } = trpc.useQuery([
    "pokemon.get-group",
    { page: currentPage },
  ]);

  const onPreviousPage = () => {
    setCurrentPage(currentPage - 1);
  };

  const onNextPage = () => {
    setCurrentPage(currentPage + 1);
  };

  return (
    <>
      <Head>
        <title>Poke-Dex</title>
        <meta
          name="description"
          content="Sandbox app for trying new stuff. Generated by create-t3-app"
        />
      </Head>

      <section className="flex flex-col h-screen w-screen justify-between p-12">
        {isLoading ? (
          <div className="flex justify-center text-white">Loading...</div>
        ) : (
          <section className="grid grid-cols-6 gap-4">
            {data?.map((pokemon) => (
              <PokemonCard
                key={pokemon.id}
                id={pokemon.id}
                name={pokemon.name}
                image={pokemon.sprites.front_default ?? ""}
              />
            ))}
          </section>
        )}

        <div className="flex justify-center items-baseline gap-4">
          <Button
            onClick={onPreviousPage}
            disabled={isLoading || currentPage === 1}
          >
            Previous page
          </Button>

          <p className="text-white">{currentPage}</p>

          <Button onClick={onNextPage} disabled={isLoading}>
            Next page
          </Button>
        </div>
      </section>
    </>
  );
};

type PokemonCardProps = {
  id: number;
  name: string;
  image: string;
};

const pokemonCardClass =
  "p-4 rounded-md shadow text-center bg-slate-600 text-white cursor-pointer hover:bg-slate-500 hover:-translate-y-1 transition-all";

const PokemonCard: JSXElementConstructor<PokemonCardProps> = ({
  id,
  name,
  image,
}) => {
  const router = useRouter();

  return (
    <div
      className={pokemonCardClass}
      onClick={() => router.push(`/pokemon/${id}`)}
    >
      <strong className="capitalize block">{name}</strong>
      <Image
        className="block"
        src={image}
        alt={`sprite for ${name}`}
        width={96}
        height={96}
      />
    </div>
  );
};

export default Home;
